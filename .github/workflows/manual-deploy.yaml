name: Deploy to EC2 via SSM

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Application to EC2
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Application via SSM
        id: deploy_ssm
        run: |
          echo "::group::Starting Deployment Process"

          echo "Sending SSM command to deploy application..."
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy application with blue-green strategy" \
            --parameters '{"commands": [
                "set -e",

                "echo \"[INFO] Setting up directories and environment...\"",
                "WORKDIR=/home/ubuntu/deployment",
                "BLUE_DIR=$WORKDIR/blue",
                "GREEN_DIR=$WORKDIR/green",

                "echo \"[INFO] Checking active deployment...\"",
                "if [ -f \"$WORKDIR/current\" ]; then",
                "  CURRENT_DIR=$(cat \"$WORKDIR/current\")",
                "else",
                "  CURRENT_DIR=\"blue\"",
                "fi",

                "if [ \"$CURRENT_DIR\" = \"blue\" ]; then",
                "  NEXT_DIR=\"green\"",
                "  NEXT_PORT=3001",
                "else",
                "  NEXT_DIR=\"blue\"",
                "  NEXT_PORT=3000",
                "fi",

                "echo \"[INFO] Current deployment: $CURRENT_DIR\"",
                "echo \"[INFO] Next deployment: $NEXT_DIR on port $NEXT_PORT\"",

                "echo \"[INFO] Preparing deployment directory: $NEXT_DIR\"",
                "mkdir -p $WORKDIR/$NEXT_DIR",
                "if ! curl -o $WORKDIR/$NEXT_DIR/docker-compose.yaml https://raw.githubusercontent.com/Hazqeel09/getdoav3/refs/heads/main/docker-compose.yaml; then",
                "  echo \"[ERROR] Failed to fetch docker-compose.yaml\" >&2",
                "  exit 1",
                "fi",

                "echo \"[INFO] Writing secrets to .env file...\"",
                "rm -f /home/ubuntu/.env",
                "echo \"DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}\" > /home/ubuntu/.env",
                "echo \"POSTGRES_USER=${{ secrets.POSTGRES_USER }}\" >> /home/ubuntu/.env",
                "echo \"POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}\" >> /home/ubuntu/.env",
                "echo \"POSTGRES_DB=${{ secrets.POSTGRES_DB }}\" >> /home/ubuntu/.env",
                "echo \"SESSION_SECRET=${{ secrets.SESSION_SECRET }}\" >> /home/ubuntu/.env",
                "chmod 600 /home/ubuntu/.env",

                "echo \"[INFO] Updating docker-compose.yaml with port: $NEXT_PORT\"",
                "sed -i 's/${PORT:-3000}/$NEXT_PORT:3000/' $WORKDIR/$NEXT_DIR/docker-compose.yaml",

                "echo \"[INFO] Pulling Docker images...\"",
                "if ! sudo docker-compose -f $WORKDIR/$NEXT_DIR/docker-compose.yaml --env-file /home/ubuntu/.env pull; then",
                "  echo \"[ERROR] Docker Compose pull failed.\" >&2",
                "  exit 1",
                "fi",

                "echo \"[INFO] Starting new containers in $NEXT_DIR ...\"",
                "if ! sudo docker-compose -f $WORKDIR/$NEXT_DIR/docker-compose.yaml --env-file /home/ubuntu/.env up -d; then",
                "  echo \"[ERROR] Docker Compose up failed.\" >&2",
                "  exit 1",
                "fi",

                "echo \"[INFO] Waiting for new containers to become healthy...\"",
                "MAX_RETRIES=30",
                "RETRY_COUNT=0",
                "until [ $RETRY_COUNT -ge $MAX_RETRIES ] || curl -s http://localhost:$NEXT_PORT/health; do",
                "  RETRY_COUNT=$((RETRY_COUNT + 1))",
                "  echo \"[INFO] Waiting for new deployment at port $NEXT_PORT... ($RETRY_COUNT/$MAX_RETRIES)\"",
                "  sleep 5",
                "done",

                "if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then",
                "  echo \"[ERROR] New deployment failed health check.\" >&2",
                "  exit 1",
                "fi",

                "echo \"[INFO] Stopping old containers in $CURRENT_DIR ...\"",
                "if [ -f $WORKDIR/$CURRENT_DIR/docker-compose.yaml ]; then",
                "  sudo docker-compose -f $WORKDIR/$CURRENT_DIR/docker-compose.yaml down",
                "else",
                "  echo \"[INFO] No existing deployment found to stop\"",
                "fi",

                "echo \"$NEXT_DIR\" | sudo tee $WORKDIR/current > /dev/null",
                "echo \"[INFO] Deployment complete. Active directory: $NEXT_DIR\""
            ]}' \
            --query "Command.CommandId" \
            --output text)

          echo "::endgroup::"
          echo "Command ID: $COMMAND_ID"
          echo "::set-output name=command_id::$COMMAND_ID"
