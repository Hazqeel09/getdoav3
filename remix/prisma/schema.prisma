generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(uuid())
  username   String  @unique
  email      String  @unique
  google_sub String? @unique

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  banned_at  DateTime?

  sessions     Session[]
  doas         Doa[]
  compilations Compilation[]
  bookmarks    Bookmark[]

  @@map("users")
}

model Session {
  id         String   @id @default(uuid())
  user_id    String
  expires_at DateTime

  user User @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@map("sessions")
}

model Doa {
  id               BigInt   @id @default(autoincrement())
  title_my         String?
  title_en         String?
  text_ar          String?
  text_my          String?
  text_en          String?
  fadhilat_amal_my String?
  fadhilat_amal_en String?
  slug             String?  @default(uuid())
  is_verified      Boolean?
  is_public        Boolean?
  user_id          String?

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  user         User?               @relation(fields: [user_id], references: [id])
  categories   CategoriesOnDoa[]
  sources      SourcesOnDoa[]
  compilations DoasOnCompilation[]
  bookmarks    Bookmark[]

  @@map("doas")
}

model CategoriesOnDoa {
  id          BigInt @id @default(autoincrement())
  doa_id      BigInt
  category_id BigInt

  doa      Doa      @relation(fields: [doa_id], references: [id])
  category Category @relation(fields: [category_id], references: [id])

  @@map("doa_categories")
}

model Category {
  id          BigInt  @id @default(autoincrement())
  name        String  @unique
  description String?

  doas CategoriesOnDoa[]

  @@map("categories")
}

model SourcesOnDoa {
  id        BigInt  @id @default(autoincrement())
  doa_id    BigInt
  source_id BigInt
  reference String?

  doa    Doa    @relation(fields: [doa_id], references: [id])
  source Source @relation(fields: [source_id], references: [id])

  @@map("doa_sources")
}

model Source {
  id   BigInt  @id @default(autoincrement())
  name String  @unique
  type String?

  doas SourcesOnDoa[]

  @@map("sources")
}

model Compilation {
  id          BigInt   @id @default(autoincrement())
  title       String?
  description String?
  slug        String   @unique
  views       Int?
  is_public   Boolean?
  user_id     String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user      User                @relation(fields: [user_id], references: [id])
  doas      DoasOnCompilation[]
  bookmarks Bookmark[]

  @@map("compilations")
}

model DoasOnCompilation {
  id             BigInt @id @default(autoincrement())
  compilation_id BigInt
  doa_id         BigInt
  order_number   Int

  compilation Compilation @relation(fields: [compilation_id], references: [id])
  doa         Doa         @relation(fields: [doa_id], references: [id])

  @@map("compilation_doas")
}

model Bookmark {
  id             BigInt  @id @default(autoincrement())
  user_id        String
  compilation_id BigInt?
  doa_id         BigInt?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user        User         @relation(fields: [user_id], references: [id])
  compilation Compilation? @relation(fields: [compilation_id], references: [id])
  doa         Doa?         @relation(fields: [doa_id], references: [id])

  @@map("bookmarks")
}
